# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Install Kubernetes Monitoring
#
# V1.0 
#
# Â©2020 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

source ./0_variables.sh

# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Do Not Edit Below
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "  "
echo " ${CYAN}  Register Kubernetes Monitoring for OpenShift 4.3${NC}"
echo "  "
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "  "
echo "  "
echo "  "



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# GET PARAMETERS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Input Parameters${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"



        while getopts "d:t:n:f:" opt
        do
          case "$opt" in
              d ) INPUT_DOCKER_DOMAIN="$OPTARG" ;;
              n ) INPUT_IMPORT_NAME="$OPTARG" ;;
              t ) INPUT_TLS="$OPTARG" ;;
              f ) INPUT_CONFIG="$OPTARG" ;;
          esac
        done


        if [[ $INPUT_DOCKER_DOMAIN == "" ]];
        then
            echo "    ${RED}ERROR${NC}: Please provide the Docker Hub Domain"
            echo "    USAGE: $0 -d <DOCKER_DOMAIN>  -n <CLUSTER_IMPORT_NAME> -f <CONFIGURATION_FILE> [-t <HELM_TLS>]  "
            exit 1
        else
          echo "    ${GREEN}Docker Hub Domain OK:${NC}                $INPUT_DOCKER_DOMAIN"
          K8M_DOMAIN=$INPUT_DOCKER_DOMAIN
        fi


        if [[ $INPUT_CONFIG == "" ]];
        then
            echo "    ${RED}ERROR${NC}: Please provide the ibm-cloud-apm-dc-configpack.tar file"
            echo "    USAGE: $0 -d <DOCKER_DOMAIN>  -n <CLUSTER_IMPORT_NAME> -f <CONFIGURATION_FILE> [-t <HELM_TLS>]  "
            exit 1
        else
          echo "    ${GREEN}Config File OK:${NC}                      $INPUT_CONFIG"
          K8M_CONFIG=$INPUT_CONFIG
        fi



        if [[ $INPUT_IMPORT_NAME == "" ]];
        then
            echo "    ${RED}ERROR${NC}: Please provide the Import Name"
            echo "    USAGE: $0 -d <DOCKER_DOMAIN>  -n <CLUSTER_IMPORT_NAME> -f <CONFIGURATION_FILE> [-t <HELM_TLS>]  "
            exit 1
        else
          echo "    ${GREEN}Import Name OK:${NC}                     '$INPUT_IMPORT_NAME'"
          K8M_IMPORT_NAME=$INPUT_IMPORT_NAME
        fi


        if [[ $INPUT_TLS == "" ]];          
        then
          K8M_TLS=false
          echo "    ${ORANGE}No Helm TLS info provided, using${NC}             '$K8M_TLS'"
        else
          if [[ $INPUT_TLS == "true" ]];  
          then        
            HELM_TLS=" --tls"
            K8M_TLS=true
          else
            HELM_TLS=""
            K8M_TLS=false
          fi
          echo "    ${GREEN}HELM TLS:${NC}                           '$INPUT_TLS'"
        fi



echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PRE-INSTALL CHECKS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Pre-Install Checks${NC}"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"

        checkOpenshiftReachable

        #checkHelmChartInstalled "icam-kubernetes-resources"

        echo "    Check if ${CYAN}$K8M_CONFIG${NC} exists"
        if test -f "$K8M_CONFIG"; then
            echo "    ${GREEN}  OK${NC}"
        else 
            echo "    ${RED}  ERROR${NC}: ${ORANGE}ibm-cloud-apm-dc-configpack.tar${NC} does not exist in your Path"
            echo "           ${RED}Aborting.${NC}"
            exit 1
        fi

echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "



# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Define some Stuff
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Define some Stuff${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"

        getClusterFQDN

echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# CONFIG SUMMARY
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${GREEN}  Cluster ${ORANGE}'$CLUSTER_NAME'${NC} will be registered with the Monitoring Module (APM)"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo " ${BLUE}Your configuration${NC}"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}CLUSTER TO BE REGISTERED :${NC}   $CLUSTER_NAME"
echo "    ----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}IMPORT NAME :${NC}                $K8M_IMPORT_NAME"
echo "    ----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}Docker Domain for images:${NC}    $K8M_DOMAIN"
echo "    ${GREEN}Config File:${NC}                 $K8M_CONFIG"
echo "    ${GREEN}HELM TLS:${NC}                    $K8M_TLS"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "


echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${RED}Continue Installation with these Parameters? [y,N]${NC}"
echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
        read -p "[y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          echo "${GREEN}Continue...${NC}"
        else
          echo "${RED}Installation Aborted${NC}"
          exit 2
        fi
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PREREQUISITES
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${CYAN}Running Prerequisites${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"

        cp $K8M_CONFIG ./tools/apm/app_mgmt_k8sdc

echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# INSTALL
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${ORANGE}Installing....${NC}"
echo ""
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"

        kubectl create ns k8-monitor

        kubectl delete secret -n k8-monitor ibm-agent-https-secret
        kubectl delete secret -n k8-monitor dc-secret

        ansible-playbook ./tools/apm/app_mgmt_k8sdc/helm-wo-push.yaml --extra-vars="cluster_name=K8M_IMPORT_NAME release_name=icam-kubernetes-resources namespace=k8-monitor docker_group=$K8M_DOMAIN tls_enabled=$K8M_TLS docker_registry=docker.io" 

        rm ./tools/apm/app_mgmt_k8sdc/ibm-cloud-apm-dc-configpack.tar
        waitForPodsReady "k8-monitor"


echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${GREEN} Cluster ${ORANGE}'$CLUSTER_NAME'${NC} registered with the Monitoring Module.... DONE${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${GREEN}To remove release: $HELM_BIN delete icam-kubernetes-resources --purge $HELM_TLS${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"


exit 1

# PUSH IMAGES (RUN ONCE)
docker login -u niklaushirt -p cool97
ansible-playbook helm-main.yaml --extra-vars="cluster_name=mcm-hub release_name=icam-kubernetes-resources namespace=k8-monitor docker_group=niklaushirt tls_enabled=true docker_registry=docker.io" 
docker tag icam-k8-monitor:APM_202003092352 docker.io/niklaushirt/k8-monitor:APM_202003092352
docker push docker.io/niklaushirt/k8-monitor:APM_202003092352


git clone https://github.com/niklaushirt/mcm_install_roks_work.git

wget https://www.dropbox.com/s/7q24ns8zzbvq5rj/app_mgmt_syntheticpop_xlinux.tar.gz?dl=0 -O ./mcm_install_roks_work/tools/apm/app_mgmt_syntheticpop_xlinux.tar.gz
cd ./mcm_install_roks_work/tools/apm/

wget https://www.dropbox.com/s/efx6d0q63x93vie/app_mgmt_k8sdc.tar.gz?dl=0 -O ./mcm_install_roks_work/tools/apm/app_mgmt_k8sdc.tar.gz
cd ./mcm_install_roks_work/tools/apm/


cp ./helm-wo-push.yaml ./app_mgmt_k8sdc

yum install docker
sudo systemctl enable docker
sudo systemctl start docker
sudo groupadd docker
sudo usermod -aG docker $USER



scp ./app_mgmt_syntheticpop_xlinux.tar.gz root@root@console-openshift-console.apps.ocp43.tec.uk.ibm.com:/root
scp ./ibm-cloud-apm-dc-configpack.tar root@console-openshift-console.apps.ocp43.tec.uk.ibm.com:/root

ssh root@console-openshift-console.apps.ocp43.tec.uk.ibm.com

tar -xvf app_mgmt_syntheticpop_xlinux.tar.gz
tar -xvf pp_mgmt_k8sdc.tar.gz 
cp ibm-cloud-apm-dc-configpack.tar ./app_mgmt_syntheticpop_xlinux
./precheck.sh
./config-pop.sh -f ibm-cloud-apm-clouddc-configpack.tar
./start-pop.sh


scp ~/ibm-cloud-apm-dc-configpack.tar root@console-openshift-console.apps.ocp43.tec.uk.ibm.com:/root
